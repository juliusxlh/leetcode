/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int lengetListLen(ListNode* head, ListNode** tail)
    {
        ListNode* tmp =head;
        int ret=0;
        while (head!=nullptr) {
            ++ret;
            if (head->next == nullptr) {
                *tail = head;
                return ret;
            }
            head = head->next;
        }
        return ret;
    }
    
    ListNode* findNNode(ListNode* head, int pos)
    {
        ListNode* ret;
        if (pos==1)
            {
                ret = head->next;
                head->next = nullptr;
                return ret;
            }
        
        while (pos) {
            pos--;
            head=head->next;
            if (pos==1)
            {
                ret = head->next;
                head->next = nullptr;
                return ret;
            }
            
        }        
    }
    
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode* tail;
        int len = lengetListLen(head,&tail);
        if (len == 0) return head;
        k = k % len;
        if (k==0) return head;
        tail->next = head;
        ListNode* pos = findNNode(head,len-k);
        return pos;
    }
};
